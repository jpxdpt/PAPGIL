{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luisg\\\\PAP Gil\\\\esp32-ble-dashboard\\\\src\\\\components\\\\Chart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = ({\n  data = []\n}) => {\n  // Preparar dados para o gráfico (últimos 20 pontos)\n  const chartData = data.slice(0, 20).reverse();\n  const chartConfig = {\n    labels: chartData.map((_, index) => {\n      const time = new Date(Date.now() - (chartData.length - index - 1) * 2000);\n      return time.toLocaleTimeString('pt-PT', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    }),\n    datasets: [{\n      label: 'Potenciômetro',\n      data: chartData.map(item => item.potenciometro),\n      borderColor: '#3b82f6',\n      backgroundColor: 'rgba(59, 130, 246, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Histórico do Potenciômetro',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 4095,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      },\n      x: {\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          color: '#6b7280',\n          maxTicksLimit: 8\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    },\n    elements: {\n      point: {\n        radius: 4,\n        hoverRadius: 6\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '300px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartConfig,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","data","chartData","slice","reverse","chartConfig","labels","map","_","index","time","Date","now","length","toLocaleTimeString","hour","minute","second","datasets","label","item","potenciometro","borderColor","backgroundColor","tension","fill","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","weight","scales","y","beginAtZero","max","grid","color","ticks","x","maxTicksLimit","interaction","intersect","mode","elements","point","radius","hoverRadius","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/luisg/PAP Gil/esp32-ble-dashboard/src/components/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Chart = ({ data = [] }) => {\r\n  // Preparar dados para o gráfico (últimos 20 pontos)\r\n  const chartData = data.slice(0, 20).reverse();\r\n  \r\n  const chartConfig = {\r\n    labels: chartData.map((_, index) => {\r\n      const time = new Date(Date.now() - (chartData.length - index - 1) * 2000);\r\n      return time.toLocaleTimeString('pt-PT', { \r\n        hour: '2-digit', \r\n        minute: '2-digit',\r\n        second: '2-digit'\r\n      });\r\n    }),\r\n    datasets: [\r\n      {\r\n        label: 'Potenciômetro',\r\n        data: chartData.map(item => item.potenciometro),\r\n        borderColor: '#3b82f6',\r\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n        tension: 0.4,\r\n        fill: true,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Histórico do Potenciômetro',\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 4095,\r\n        grid: {\r\n          color: 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        ticks: {\r\n          color: '#6b7280',\r\n        }\r\n      },\r\n      x: {\r\n        grid: {\r\n          color: 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        ticks: {\r\n          color: '#6b7280',\r\n          maxTicksLimit: 8,\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: 'index',\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 4,\r\n        hoverRadius: 6,\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '300px', width: '100%' }}>\r\n      <Line data={chartConfig} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}